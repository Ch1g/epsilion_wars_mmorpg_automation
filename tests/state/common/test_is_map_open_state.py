from unittest.mock import Mock

import pytest

from epsilion_wars_mmorpg_automation.game.state.common import is_map_open_state

success_map_message = """–¢—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—à—å üó∫ –ö–∞—Ä—Ç—É.
–•–º–º, –∫—É–¥–∞ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º—Å—è –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑?

 –õ–µ–≥–µ–Ω–¥–∞ –∫–∞—Ä—Ç—ã:
üèõ - –ì–æ—Ä–æ–¥
–û—Å—Ç–∞–ª—å–Ω–æ–µ - –ó–æ–Ω—ã –æ—Ö–æ—Ç—ã"""


@pytest.mark.parametrize('has_town, expected', [
    (True, True),
    (False, False),
])
def test_is_map_open_state(has_town: bool, expected: bool):
    button_mock = Mock()
    button_mock.text = 'üèõ –ö–∞—Ä–±–∞—Ä–∞–∫' if has_town else '–ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è, –Ω–µ –≥–æ—Ä–æ–¥'
    event_mock = Mock()
    event_mock.message.message = success_map_message
    event_mock.message.buttons = [[button_mock]]

    result = is_map_open_state(event_mock)

    assert result is expected

