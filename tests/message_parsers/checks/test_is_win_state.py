from unittest.mock import Mock

import pytest

from epsilion_wars_mmorpg_automation.parsers.checks.states import is_win_state


@pytest.mark.parametrize('button_text,expected', [
    ('–ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞', False),
    ('‚úÖ –ó–∞–±—Ä–∞—Ç—å –Ωa–≥—Ä–∞–¥—É', True),
    ('–í –∑–æ–Ω—É –æ—Ö–æ—Ç—ã', False),
])
def test_is_win_state(button_text: str, expected: bool):
    button = Mock()
    button.text = button_text
    event_mock = Mock()
    event_mock.message.message = ''
    event_mock.message.button_count = 1
    event_mock.message.buttons = [[button]]

    result = is_win_state(event_mock)

    assert result is expected


def test_is_win_state_after_escape():
    button = Mock()
    button.text = '–í –∑–æ–Ω—É –æ—Ö–æ—Ç—ã'
    event_mock = Mock()
    event_mock.message.message = 'ü§¥Ô∏è Fnfnf üî∏17 –ø–æ–ø—ã—Ç–∞–ª—Å—è —Å–±–µ–∂–∞—Ç—å –æ—Ç  ü§¥Ô∏è LLL üî∏17, –Ω–æ –ø–æ–ø—ã—Ç–∫–∞ –±—ã–ª–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–∞'
    event_mock.message.button_count = 1
    event_mock.message.buttons = [[button]]

    result = is_win_state(event_mock)

    assert result is True
